function n(i){const t=document.createElement("div");t.innerHTML=i;const e=document.createDocumentFragment();for(;t.firstChild;)e.appendChild(t.firstChild);return e}function l(i){const t=document.createElement("style");return t.textContent=i,t}const r=l;class c extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(r(".class { height: 100vh; display: flex; align-items: center; justify-content: center; flex-direction: column; color: #fff; font-family: sans-serif; line-height: 1.8; padding: 0 80px; } .class .cover { width: 100%; height: 100%; position: absolute; top: 0; left: 0; background-size: cover; } .class .title { font-size: 50px; font-weight: bold; position: relative; } .class .desc { font-size: 18px; margin-bottom: 40px; position: relative; } .class .author { font-size: 12px; position: absolute; left: 0; bottom: 20px; right: 0; text-align: center; } .list { display: flex; flex-wrap: wrap; margin-top: 30px; font-family: sans-serif; } .item { width: 12.5vw; text-align: center; color: #000; margin-bottom: 30px; text-decoration: none; transition: all 0.3s; } .item:hover { transform: scale(1.1); } .item .cover { width: 8vw; height: 8vw; background-size: contain; background-repeat: no-repeat; background-position: center; margin: 0 auto; } .item .title { margin: 0; padding: 10px; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; font-size: 12px; }")),Promise.all([window.iconlakeAPI.class.getInfo(window.iconlakeAPI.class.id),window.iconlakeAPI.class.getNfts(window.iconlakeAPI.class.id)]).then(([t,e])=>{this.renderClass(t),this.renderNfts(e,t),window.iconlakeAPI.loading.isShow=!1})}renderClass(t){const e=n(`<div class="class"><div class="cover" style="background-image:url(${t.uri})"></div><div class="title">${t.name}</div><div class="desc">${t.description}</div><div class="author">Created by ${t.data.author}</div></div>`),s=e.querySelector(".class");s.addEventListener("click",()=>{window.scrollTo({top:s.offsetHeight-100,behavior:"smooth"})}),this.shadowRoot.appendChild(e)}renderNfts(t,e){const s=o=>`<a class="item" href="/exhibition/${e.id}/${o.id}"><div class="cover" style="background-image:url(${o.uri})"></div><p class="title">${o.data.name}</p></a>`,a=n(`<div class="list">${t.nfts.map(s).join("")}</div>`);this.shadowRoot.appendChild(a)}}export{c as default};
