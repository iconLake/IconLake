var c=Object.defineProperty;var d=(n,e,t)=>e in n?c(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t;var i=(n,e,t)=>(d(n,typeof e!="symbol"?e+"":e,t),t);const a="iconlake:";var r=(n=>(n.ProjectInfoChange="project_info_change",n.IconCollected="icon_collected",n))(r||{});class l{constructor(){i(this,"registedEvents",{project_info_change:0,icon_collected:0});i(this,"listenerMap",new Map);i(this,"EventType",r)}on(e,t){this.registedEvents[e]++;const s=o=>{o.data.type===`${a}${e}`&&t(o.data.data)};this.listenerMap.set(t,s),window.addEventListener("message",s)}off(e,t){this.registedEvents[e]--;const s=this.listenerMap.get(t);!s||window.removeEventListener("message",s)}emit(e,t){window.postMessage({type:`${a}${e}`,data:JSON.parse(JSON.stringify(t))},"*")}checkHealth(){for(const e in this.registedEvents){const t=this.registedEvents[e];if(t<0||t>10)return!1}return!0}}const f=new l;export{f as e};
