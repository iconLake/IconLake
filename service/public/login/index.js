var __awaiter=this&&this.__awaiter||function(e,r,c,l){return new(c=c||Promise)(function(i,t){function n(e){try{a(l.next(e))}catch(e){t(e)}}function o(e){try{a(l.throw(e))}catch(e){t(e)}}function a(e){var t;e.done?i(e.value):((t=e.value)instanceof c?t:new c(function(e){e(t)})).then(n,o)}a((l=l.apply(e,r||[])).next())})};__awaiter(this,void 0,void 0,function*(){const o=!/test|debug|dev|localhost|127\.0\.0\.1/i.test(location.href);o||console.warn("You are in the developing mode."),location.search&&URL&&(i=new URL(location.href).searchParams.get("referer"))&&(document.cookie=`referer=${i};path=/`);const e=yield fetch("/api/login/params").then(e=>e.json()),t=encodeURIComponent(location.origin);var i=document.querySelector(".auth .gitee"),i=(e.login.gitee?(i.classList.add("active"),i.addEventListener("click",()=>{location.href=`https://gitee.com/oauth/authorize?client_id=${e.clientId.gitee}&redirect_uri=${t}%2Fapi%2Foauth%2Fgitee&response_type=code`})):i.style.display="none",document.querySelector(".auth .github")),i=(e.login.github?(i.classList.add("active"),i.addEventListener("click",()=>{location.href=`https://github.com/login/oauth/authorize?client_id=${e.clientId.github}&redirect_uri=${t}%2Fapi%2Foauth%2Fgithub`})):i.style.display="none",document.querySelector(".auth .code")),n=(e.login.code?(i.classList.add("active"),i.addEventListener("click",()=>{var e=prompt("Input Code:");e&&(location.href="/api/oauth/code?id="+e)})):i.style.display="none",document.querySelector(".auth .keplr"));e.login.keplr?(n.classList.add("active"),"keplr"in window||n.classList.add("uninstall"),n.addEventListener("click",()=>__awaiter(this,void 0,void 0,function*(){if("keplr"in window){var t=window.keplr,i=o?"iconlake-1":"iconlake-testnet-1";try{yield t.enable(i)}catch(e){var n=yield fetch(`/common/chain-${o?"main":"test"}net.json`).then(e=>e.json());yield t.experimentalSuggestChain(n),yield new Promise(e=>{setTimeout(e,200)}),yield t.enable(i)}var n=yield t.getOfflineSigner(i).getAccounts(),e=`Login iconLake
${(new Date).toISOString()}
`+n[0].address,t=yield t.signArbitrary(i,n[0].address,e);fetch("/api/oauth/blockchain",{method:"POST",headers:{"Content-Type":"application/json;charset=UTF-8"},body:JSON.stringify({msg:e,sig:t.signature,pubkey:t.pub_key})}).then(e=>e.json()).then(e=>{e.error?alert(e.error):window.location.href=e.redirect})}else location.href="https://www.keplr.app/download"}))):i.style.display="none",fetch("/api/user/info").then(e=>e.json()).then(e=>{e.error||(location.href="/manage/home")})});