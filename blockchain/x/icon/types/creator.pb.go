// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: iconlake/icon/creator.proto

package types

import (
	fmt "fmt"
	proto "github.com/cosmos/gogoproto/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type CreatorRaw struct {
	Address     []byte   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Name        string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Avatar      string   `protobuf:"bytes,4,opt,name=avatar,proto3" json:"avatar,omitempty"`
	AvatarHash  string   `protobuf:"bytes,5,opt,name=avatarHash,proto3" json:"avatarHash,omitempty"`
	Medias      []*Media `protobuf:"bytes,6,rep,name=medias,proto3" json:"medias,omitempty"`
	Sex         string   `protobuf:"bytes,7,opt,name=sex,proto3" json:"sex,omitempty"`
	Birthday    string   `protobuf:"bytes,8,opt,name=birthday,proto3" json:"birthday,omitempty"`
	Location    string   `protobuf:"bytes,9,opt,name=location,proto3" json:"location,omitempty"`
}

func (m *CreatorRaw) Reset()         { *m = CreatorRaw{} }
func (m *CreatorRaw) String() string { return proto.CompactTextString(m) }
func (*CreatorRaw) ProtoMessage()    {}
func (*CreatorRaw) Descriptor() ([]byte, []int) {
	return fileDescriptor_27a5ff810e2cdcc8, []int{0}
}
func (m *CreatorRaw) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CreatorRaw) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CreatorRaw.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CreatorRaw) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreatorRaw.Merge(m, src)
}
func (m *CreatorRaw) XXX_Size() int {
	return m.Size()
}
func (m *CreatorRaw) XXX_DiscardUnknown() {
	xxx_messageInfo_CreatorRaw.DiscardUnknown(m)
}

var xxx_messageInfo_CreatorRaw proto.InternalMessageInfo

func (m *CreatorRaw) GetAddress() []byte {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *CreatorRaw) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreatorRaw) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *CreatorRaw) GetAvatar() string {
	if m != nil {
		return m.Avatar
	}
	return ""
}

func (m *CreatorRaw) GetAvatarHash() string {
	if m != nil {
		return m.AvatarHash
	}
	return ""
}

func (m *CreatorRaw) GetMedias() []*Media {
	if m != nil {
		return m.Medias
	}
	return nil
}

func (m *CreatorRaw) GetSex() string {
	if m != nil {
		return m.Sex
	}
	return ""
}

func (m *CreatorRaw) GetBirthday() string {
	if m != nil {
		return m.Birthday
	}
	return ""
}

func (m *CreatorRaw) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

type Creator struct {
	Address     string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Name        string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Avatar      string   `protobuf:"bytes,4,opt,name=avatar,proto3" json:"avatar,omitempty"`
	AvatarHash  string   `protobuf:"bytes,5,opt,name=avatarHash,proto3" json:"avatarHash,omitempty"`
	Medias      []*Media `protobuf:"bytes,6,rep,name=medias,proto3" json:"medias,omitempty"`
	Sex         string   `protobuf:"bytes,7,opt,name=sex,proto3" json:"sex,omitempty"`
	Birthday    string   `protobuf:"bytes,8,opt,name=birthday,proto3" json:"birthday,omitempty"`
	Location    string   `protobuf:"bytes,9,opt,name=location,proto3" json:"location,omitempty"`
}

func (m *Creator) Reset()         { *m = Creator{} }
func (m *Creator) String() string { return proto.CompactTextString(m) }
func (*Creator) ProtoMessage()    {}
func (*Creator) Descriptor() ([]byte, []int) {
	return fileDescriptor_27a5ff810e2cdcc8, []int{1}
}
func (m *Creator) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Creator) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Creator.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Creator) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Creator.Merge(m, src)
}
func (m *Creator) XXX_Size() int {
	return m.Size()
}
func (m *Creator) XXX_DiscardUnknown() {
	xxx_messageInfo_Creator.DiscardUnknown(m)
}

var xxx_messageInfo_Creator proto.InternalMessageInfo

func (m *Creator) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Creator) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Creator) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Creator) GetAvatar() string {
	if m != nil {
		return m.Avatar
	}
	return ""
}

func (m *Creator) GetAvatarHash() string {
	if m != nil {
		return m.AvatarHash
	}
	return ""
}

func (m *Creator) GetMedias() []*Media {
	if m != nil {
		return m.Medias
	}
	return nil
}

func (m *Creator) GetSex() string {
	if m != nil {
		return m.Sex
	}
	return ""
}

func (m *Creator) GetBirthday() string {
	if m != nil {
		return m.Birthday
	}
	return ""
}

func (m *Creator) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func init() {
	proto.RegisterType((*CreatorRaw)(nil), "iconlake.icon.CreatorRaw")
	proto.RegisterType((*Creator)(nil), "iconlake.icon.Creator")
}

func init() { proto.RegisterFile("iconlake/icon/creator.proto", fileDescriptor_27a5ff810e2cdcc8) }

var fileDescriptor_27a5ff810e2cdcc8 = []byte{
	// 295 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe4, 0x92, 0xc1, 0x4a, 0xf3, 0x40,
	0x14, 0x85, 0x3b, 0x49, 0xff, 0xa4, 0xb9, 0xfd, 0x05, 0x19, 0x54, 0xc6, 0x0a, 0x43, 0xe8, 0x2a,
	0x0b, 0x49, 0x40, 0xdf, 0x40, 0x37, 0x6e, 0xdc, 0x64, 0xe9, 0xee, 0x36, 0x19, 0x68, 0xb0, 0xcd,
	0x84, 0x99, 0x41, 0xdb, 0x47, 0x10, 0x5c, 0xf8, 0x58, 0x2e, 0xbb, 0x74, 0x29, 0xc9, 0x8b, 0x48,
	0x26, 0x49, 0x69, 0x7d, 0x05, 0x77, 0xe7, 0xdc, 0xef, 0x26, 0xdc, 0x39, 0x1c, 0xb8, 0x2a, 0x32,
	0x59, 0xae, 0xf0, 0x59, 0x24, 0xad, 0x48, 0x32, 0x25, 0xd0, 0x48, 0x15, 0x57, 0x4a, 0x1a, 0x49,
	0x4f, 0x06, 0x18, 0xb7, 0x62, 0x76, 0x79, 0xbc, 0xbb, 0x16, 0x79, 0x81, 0xdd, 0xe6, 0xfc, 0xdd,
	0x01, 0xb8, 0xef, 0xbe, 0x4d, 0xf1, 0x95, 0x32, 0xf0, 0x31, 0xcf, 0x95, 0xd0, 0x9a, 0x91, 0x90,
	0x44, 0xff, 0xd3, 0xc1, 0x52, 0x0a, 0xe3, 0x12, 0xd7, 0x82, 0x39, 0x21, 0x89, 0x82, 0xd4, 0x6a,
	0x1a, 0xc2, 0x34, 0x17, 0x3a, 0x53, 0x45, 0x65, 0x0a, 0x59, 0x32, 0xd7, 0xa2, 0xc3, 0x11, 0xbd,
	0x00, 0x0f, 0x5f, 0xd0, 0xa0, 0x62, 0x63, 0x0b, 0x7b, 0x47, 0x39, 0x40, 0xa7, 0x1e, 0x50, 0x2f,
	0xd9, 0x3f, 0xcb, 0x0e, 0x26, 0xf4, 0x1a, 0x3c, 0x7b, 0xa5, 0x66, 0x5e, 0xe8, 0x46, 0xd3, 0x9b,
	0xb3, 0xf8, 0xe8, 0x45, 0xf1, 0x63, 0x0b, 0xd3, 0x7e, 0x87, 0x9e, 0x82, 0xab, 0xc5, 0x86, 0xf9,
	0xf6, 0x37, 0xad, 0xa4, 0x33, 0x98, 0x2c, 0x0a, 0x65, 0x96, 0x39, 0x6e, 0xd9, 0xc4, 0x8e, 0xf7,
	0xbe, 0x65, 0x2b, 0x99, 0xa1, 0x3d, 0x39, 0xe8, 0xd8, 0xe0, 0xe7, 0x6f, 0x0e, 0xf8, 0x7d, 0x1c,
	0xbf, 0xb3, 0x08, 0xfe, 0x58, 0x16, 0x77, 0xc9, 0x67, 0xcd, 0xc9, 0xae, 0xe6, 0xe4, 0xbb, 0xe6,
	0xe4, 0xa3, 0xe1, 0xa3, 0x5d, 0xc3, 0x47, 0x5f, 0x0d, 0x1f, 0x3d, 0x9d, 0xef, 0xfb, 0xb4, 0xe9,
	0x1a, 0x65, 0xb6, 0x95, 0xd0, 0x0b, 0xcf, 0x56, 0xea, 0xf6, 0x27, 0x00, 0x00, 0xff, 0xff, 0x3c,
	0x1b, 0x34, 0xcd, 0x9b, 0x02, 0x00, 0x00,
}

func (m *CreatorRaw) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreatorRaw) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreatorRaw) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Location) > 0 {
		i -= len(m.Location)
		copy(dAtA[i:], m.Location)
		i = encodeVarintCreator(dAtA, i, uint64(len(m.Location)))
		i--
		dAtA[i] = 0x4a
	}
	if len(m.Birthday) > 0 {
		i -= len(m.Birthday)
		copy(dAtA[i:], m.Birthday)
		i = encodeVarintCreator(dAtA, i, uint64(len(m.Birthday)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.Sex) > 0 {
		i -= len(m.Sex)
		copy(dAtA[i:], m.Sex)
		i = encodeVarintCreator(dAtA, i, uint64(len(m.Sex)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Medias) > 0 {
		for iNdEx := len(m.Medias) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Medias[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintCreator(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x32
		}
	}
	if len(m.AvatarHash) > 0 {
		i -= len(m.AvatarHash)
		copy(dAtA[i:], m.AvatarHash)
		i = encodeVarintCreator(dAtA, i, uint64(len(m.AvatarHash)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Avatar) > 0 {
		i -= len(m.Avatar)
		copy(dAtA[i:], m.Avatar)
		i = encodeVarintCreator(dAtA, i, uint64(len(m.Avatar)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Description) > 0 {
		i -= len(m.Description)
		copy(dAtA[i:], m.Description)
		i = encodeVarintCreator(dAtA, i, uint64(len(m.Description)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintCreator(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintCreator(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Creator) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Creator) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Creator) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Location) > 0 {
		i -= len(m.Location)
		copy(dAtA[i:], m.Location)
		i = encodeVarintCreator(dAtA, i, uint64(len(m.Location)))
		i--
		dAtA[i] = 0x4a
	}
	if len(m.Birthday) > 0 {
		i -= len(m.Birthday)
		copy(dAtA[i:], m.Birthday)
		i = encodeVarintCreator(dAtA, i, uint64(len(m.Birthday)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.Sex) > 0 {
		i -= len(m.Sex)
		copy(dAtA[i:], m.Sex)
		i = encodeVarintCreator(dAtA, i, uint64(len(m.Sex)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Medias) > 0 {
		for iNdEx := len(m.Medias) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Medias[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintCreator(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x32
		}
	}
	if len(m.AvatarHash) > 0 {
		i -= len(m.AvatarHash)
		copy(dAtA[i:], m.AvatarHash)
		i = encodeVarintCreator(dAtA, i, uint64(len(m.AvatarHash)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Avatar) > 0 {
		i -= len(m.Avatar)
		copy(dAtA[i:], m.Avatar)
		i = encodeVarintCreator(dAtA, i, uint64(len(m.Avatar)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Description) > 0 {
		i -= len(m.Description)
		copy(dAtA[i:], m.Description)
		i = encodeVarintCreator(dAtA, i, uint64(len(m.Description)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintCreator(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintCreator(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintCreator(dAtA []byte, offset int, v uint64) int {
	offset -= sovCreator(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *CreatorRaw) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovCreator(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovCreator(uint64(l))
	}
	l = len(m.Description)
	if l > 0 {
		n += 1 + l + sovCreator(uint64(l))
	}
	l = len(m.Avatar)
	if l > 0 {
		n += 1 + l + sovCreator(uint64(l))
	}
	l = len(m.AvatarHash)
	if l > 0 {
		n += 1 + l + sovCreator(uint64(l))
	}
	if len(m.Medias) > 0 {
		for _, e := range m.Medias {
			l = e.Size()
			n += 1 + l + sovCreator(uint64(l))
		}
	}
	l = len(m.Sex)
	if l > 0 {
		n += 1 + l + sovCreator(uint64(l))
	}
	l = len(m.Birthday)
	if l > 0 {
		n += 1 + l + sovCreator(uint64(l))
	}
	l = len(m.Location)
	if l > 0 {
		n += 1 + l + sovCreator(uint64(l))
	}
	return n
}

func (m *Creator) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovCreator(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovCreator(uint64(l))
	}
	l = len(m.Description)
	if l > 0 {
		n += 1 + l + sovCreator(uint64(l))
	}
	l = len(m.Avatar)
	if l > 0 {
		n += 1 + l + sovCreator(uint64(l))
	}
	l = len(m.AvatarHash)
	if l > 0 {
		n += 1 + l + sovCreator(uint64(l))
	}
	if len(m.Medias) > 0 {
		for _, e := range m.Medias {
			l = e.Size()
			n += 1 + l + sovCreator(uint64(l))
		}
	}
	l = len(m.Sex)
	if l > 0 {
		n += 1 + l + sovCreator(uint64(l))
	}
	l = len(m.Birthday)
	if l > 0 {
		n += 1 + l + sovCreator(uint64(l))
	}
	l = len(m.Location)
	if l > 0 {
		n += 1 + l + sovCreator(uint64(l))
	}
	return n
}

func sovCreator(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozCreator(x uint64) (n int) {
	return sovCreator(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *CreatorRaw) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCreator
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreatorRaw: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreatorRaw: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCreator
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthCreator
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthCreator
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = append(m.Address[:0], dAtA[iNdEx:postIndex]...)
			if m.Address == nil {
				m.Address = []byte{}
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCreator
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCreator
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCreator
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCreator
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCreator
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCreator
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Description = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Avatar", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCreator
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCreator
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCreator
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Avatar = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AvatarHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCreator
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCreator
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCreator
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AvatarHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Medias", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCreator
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCreator
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthCreator
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Medias = append(m.Medias, &Media{})
			if err := m.Medias[len(m.Medias)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sex", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCreator
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCreator
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCreator
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sex = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Birthday", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCreator
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCreator
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCreator
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Birthday = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Location", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCreator
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCreator
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCreator
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Location = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCreator(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthCreator
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Creator) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCreator
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Creator: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Creator: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCreator
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCreator
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCreator
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCreator
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCreator
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCreator
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCreator
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCreator
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCreator
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Description = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Avatar", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCreator
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCreator
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCreator
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Avatar = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AvatarHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCreator
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCreator
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCreator
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AvatarHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Medias", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCreator
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCreator
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthCreator
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Medias = append(m.Medias, &Media{})
			if err := m.Medias[len(m.Medias)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sex", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCreator
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCreator
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCreator
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sex = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Birthday", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCreator
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCreator
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCreator
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Birthday = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Location", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCreator
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCreator
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCreator
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Location = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCreator(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthCreator
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipCreator(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowCreator
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowCreator
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowCreator
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthCreator
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupCreator
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthCreator
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthCreator        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowCreator          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupCreator = fmt.Errorf("proto: unexpected end of group")
)
